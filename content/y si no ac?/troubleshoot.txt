Pre-envio:
Escribe algunos casos de prueba simples, si la muestra no es suficiente.
Sabes los limites? Genera los casos maximos.
Esta bien el uso de la memoria?
Podria haber overflow?
Asegurese de enviar el archivo correcto.

Respuesta incorrecta: WA
USA LONG
Imprime tu solucion! Imprime tambien la salida de debug.
Estas limpiando todas las estructuras de datos entre casos de prueba?
Puede tu algoritmo manejar todo el rango de entrada?
Vuelve a leer el enunciado completo del problema.
Manejas todos los casos limite correctamente?
Has entendido correctamente el problema?
Codigo copiado incorrecto?
Alguna variable no inicializada?
Algun desbordamiento?
Variables con el mismo nombre?
Recursividad correcta?
Confundir N y M, i y j, etc.?
Estas seguro de que tu algoritmo funciona?
En que casos especiales no has pensado?
Estas seguro de que las funciones STL (Libreria estandar) que usas funcionan como crees?
Agrega algunas respuestas a las preguntas, tal vez vuelva a enviar.
Crea algunos casos de prueba para ejecutar su algoritmo.
Ve a traves del algoritmo para un caso simple.
Revisa esta lista nuevamente.
Explique su algoritmo a un compadre de equipo.
Pidele al compadre de equipo que mire tu codigo.
Salga a dar un paseillo, p. al posadero.
Es correcto su formato de salida? (incluyendo espacios en blanco)
Vuelva a escribir su solucion desde el principio o deje que un compadre de equipo lo haga.


Error de ejecucion (RTE):
USA LONG
Has probado todos los casos limites localmente?
Alguna variable no inicializada?
Esta leyendo o escribiendo fuera del rango de cualquier vector?
Alguna llamada que pueda fallar?
Alguna posible division por 0? (modulo 0 por ejemplo)
Alguna recursion infinita posible?
Iteradores invalidos?
Estas usando demasiada memoria?
Depuracion con reenvios (por ejemplo, seniales reasignadas, consulte Varios).


Tiempo limite (TLE):
Tienes posibles bucles infinitos?
Cual es la complejidad de su algoritmo?
Estas copiando muchos datos innecesarios? (Referencias)
Que tan grande es la entrada y la salida? (considere buffered reader)
Evite el vector, el mapa. (use arrays)
Usas vectores? Cambiar a array.
Que piensan tus compadres de equipo sobre tu algoritmo?

Memoria limite excedida (MLE):
Cual es la cantidad maxima de memoria que su algoritmo deberia necesitar?
Esta limpiando todas las estructuras de datos entre casos de prueba?

Vida antes que muerte. Fuerza antes que debilidad. Viaje antes que destino.
